# -*- coding: utf-8 -*-
"""
# @Time    : 2022/3/5 14:26
# @Author  : bruce
# @desc    :
This module contains the default values for all project used by ApiTestEz.
"""
import os
import time

# LOG
CONSOLE_LOG_FORMAT = '%(asctime)s [%(levelname)s] [%(filename)s:%(lineno)d] [%(thread)d] - %(message)s'
CONSOLE_LOG_LEVEL = 'INFO'

FILE_LOG_FORMAT = '%(asctime)s [%(levelname)s] [%(filename)s:%(lineno)d] [%(thread)d] - %(message)s'
FILE_LOG_LEVEL = 'DEBUG'
FILE_LOG_PATH = None

# REPORT
REPORT_DIR = None
REPORT_STYLE = 'br'
REPORT_FILE_NAME = f'{time.strftime("%Y_%m_%d_%H_%M_%S", time.localtime(int(time.time())))}.html'
REPORT_TITLE = 'ApiTestEz Report'
REPORT_DESC = 'This is an api-test report generated by ApiTestEz.'
BR_REPORT_THEME = 'theme_default'


# MQTT
TESTING_ENV_MQTT_BROKER = "mqtt-test.qiyou.cn"  # MQTT代理服务器地址
TESTING_ENV_MQTT_PORT = 8883  # MQTT代理服务器端口
TESTING_ENV_MQTT_TOPIC = "qy_mqtt/+/188B152733D4/20093500020/#"  # 要订阅和发布的主题
TESTING_ENV_MQTT_CLIENT_ID_SUB = "python-client-testsub-by-ky001"  # 客户端ID
TESTING_ENV_MQTT_CLIENT_ID_PUB = "python-client-testpub-by-ky002"  # 客户端ID
TESTING_ENV_MQTT_USERNAME = "ljbclient01"  # MQTT用户名（如果需要）
TESTING_ENV_MQTT_PASSWORD = "Z6bsl+eVuAKwbe5c7VRy+S"  # MQTT密码（如果需要）

RELEASE_ENV_MQTT_BROKER = "ljbmq.qiyou.cn"  # MQTT代理服务器地址
RELEASE_ENV_MQTT_PORT = 8883  # MQTT代理服务器端口
RELEASE_ENV_MQTT_TOPIC = "qy_mqtt/+/188B152733D4/20093500020/#"  # 要订阅和发布的主题
RELEASE_ENV_MQTT_CLIENT_ID_SUB = "python-client-testsub-by-ky001"  # 客户端ID
RELEASE_ENV_MQTT_CLIENT_ID_PUB = "python-client-testpub-by-ky002"  # 客户端ID
RELEASE_ENV_MQTT_USERNAME = "ljbclient01"  # MQTT用户名（如果需要）
RELEASE_ENV_MQTT_PASSWORD = "tReRHEulWvT+zaGs"  # MQTT密码（如果需要）
BASEDIR = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))  # 项目根目录
CA_DIR = os.path.join(BASEDIR, "config")  # 证书目录
MQTT_config ={
    "test": {
        "mqtt_broker": TESTING_ENV_MQTT_BROKER,
        "mqtt_port": TESTING_ENV_MQTT_PORT,
        "mqtt_client_id_sub": TESTING_ENV_MQTT_CLIENT_ID_SUB,
        "mqtt_client_id_pub": TESTING_ENV_MQTT_CLIENT_ID_PUB,
        "mqtt_username": TESTING_ENV_MQTT_USERNAME,
        "mqtt_password": TESTING_ENV_MQTT_PASSWORD,
        "certificate_path": os.path.join(CA_DIR,"certificate_testing_env",""),
        "ca_certs": os.path.join(CA_DIR,"certificate_testing_env","rootCA.crt"),
        "cert_file": os.path.join(CA_DIR,"certificate_testing_env","client.crt"),
        "key_file": os.path.join(CA_DIR,"certificate_testing_env","client.key"),
    },
    "release": {
        "mqtt_broker": RELEASE_ENV_MQTT_BROKER,
        "mqtt_port": RELEASE_ENV_MQTT_PORT,
        "mqtt_topic": RELEASE_ENV_MQTT_TOPIC,
        "mqtt_client_id_sub": RELEASE_ENV_MQTT_CLIENT_ID_SUB,
        "mqtt_client_id_pub": RELEASE_ENV_MQTT_CLIENT_ID_PUB,
        "mqtt_username": RELEASE_ENV_MQTT_USERNAME,
        "mqtt_password": RELEASE_ENV_MQTT_PASSWORD,
        "certificate_path": "certificate_release_env",
        "ca_certs": "cacert-online.pem",
        "cert_file": "client-cert-online.pem",
        "key_file": "client-key-online.pem",
    }
}